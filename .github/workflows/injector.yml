# .github/workflows/injector.yml
# GitHub Action –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –æ–Ω–æ–≤–ª–µ–Ω–Ω—è SudPraktika

name: SudPraktika Injector

on:
  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏–π –∑–∞–ø—É—Å–∫ –∫–æ–∂–Ω—ñ 2 –≥–æ–¥–∏–Ω–∏
  schedule:
    - cron: '0 */2 * * *'
  
  # –†—É—á–Ω–∏–π –∑–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ GitHub interface
  workflow_dispatch:
    inputs:
      force_update:
        description: '–ü—Ä–∏–º—É—Å–æ–≤–æ –æ–Ω–æ–≤–∏—Ç–∏ –≤—Å—ñ –ø–æ—Å—Ç–∏'
        required: false
        default: 'false'
        type: boolean

jobs:
  update-decisions:
    runs-on: ubuntu-latest
    
    steps:
      # –ó–∞–≤–∞–Ω—Ç–∞–∂—É—î–º–æ –∫–æ–¥ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ—é
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # –ü–æ–≤–Ω–∞ —ñ—Å—Ç–æ—Ä—ñ—è –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ—ó —Ä–æ–±–æ—Ç–∏ Jekyll
          token: ${{ secrets.GITHUB_TOKEN }}
      
      # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Python
      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
      
      # –í—Å—Ç–∞–Ω–æ–≤–ª—é—î–º–æ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ Python
      - name: üì¶ Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyPDF2 pyyaml beautifulsoup4
          pip install python-telegram-bot==20.7
      
      # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Ruby –¥–ª—è Jekyll (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
      - name: üíé Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.1'
          bundler-cache: true
      
      # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
      - name: üîç Check project structure
        run: |
          echo "Checking project structure..."
          ls -la
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ—ó —è–∫—â–æ —ó—Ö –Ω–µ–º–∞—î
          mkdir -p _decisions
          mkdir -p _data
          mkdir -p scripts
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –Ω–∞—è–≤–Ω—ñ—Å—Ç—å _config.yml
          if [ ! -f "_config.yml" ]; then
            echo "‚ö†Ô∏è _config.yml not found, creating basic configuration"
            echo "title: SudPraktika" > _config.yml
            echo "description: –ö—Ä–∏–º—ñ–Ω–∞–ª—å–Ω–∏–π –∫–æ–¥–µ–∫—Å –£–∫—Ä–∞—ó–Ω–∏ –∑ –ø—Ä–∞–∫—Ç–∏–∫–æ—é –í–°" >> _config.yml
          fi
      
      # –ó–∞–ø—É—Å–∫–∞—î–º–æ —ñ–Ω–¥–∂–µ—Å—Ç–µ—Ä
      - name: ü§ñ Run Telegram injector
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHANNEL: ${{ secrets.TELEGRAM_CHANNEL }}
          FORCE_UPDATE: ${{ github.event.inputs.force_update }}
        run: |
          echo "üöÄ Starting SudPraktika injector..."
          echo "Channel: $TELEGRAM_CHANNEL"
          echo "Force update: $FORCE_UPDATE"
          
          cd scripts
          python telegram_injector.py
      
      # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –∑–º—ñ–Ω–∏
      - name: üìä Check for changes
        id: changes
        run: |
          git add .
          if git diff --staged --quiet; then
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "‚ÑπÔ∏è No new decisions found"
          else
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "‚úÖ New decisions detected"
            git status --porcelain
          fi
      
      # –ì–µ–Ω–µ—Ä—É—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
      - name: üìà Generate statistics
        if: steps.changes.outputs.changes == 'true'
        run: |
          echo "=== SudPraktika Statistics ===" > update_stats.txt
          echo "Date: $(date)" >> update_stats.txt
          echo "" >> update_stats.txt
          
          # –ü—ñ–¥—Ä–∞—Ö–æ–≤—É—î–º–æ —Ñ–∞–π–ª–∏
          articles_count=$(find _articles -name "*.md" 2>/dev/null | wc -l || echo "0")
          decisions_count=$(find _decisions -name "*.md" 2>/dev/null | wc -l || echo "0")
          
          echo "üìö Articles: $articles_count" >> update_stats.txt
          echo "‚öñÔ∏è Decisions: $decisions_count" >> update_stats.txt
          echo "" >> update_stats.txt
          
          # –ü–æ–∫–∞–∑—É—î–º–æ –Ω–æ–≤—ñ —Ñ–∞–π–ª–∏
          echo "üÜï New files:" >> update_stats.txt
          git diff --staged --name-status >> update_stats.txt
          
          cat update_stats.txt
      
      # –ö–æ–º–º—ñ—Ç–∏–º–æ –∑–º—ñ–Ω–∏
      - name: üíæ Commit changes
        if: steps.changes.outputs.changes == 'true'
        run: |
          # –ù–∞–ª–∞—à—Ç–æ–≤—É—î–º–æ Git –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
          git config --local user.email "action@github.com"
          git config --local user.name "SudPraktika Bot"
          
          # –°—Ç–≤–æ—Ä—é—î–º–æ –∫–æ–º–º—ñ—Ç
          commit_message="ü§ñ –ê–≤—Ç–æ–æ–Ω–æ–≤–ª–µ–Ω–Ω—è: –¥–æ–¥–∞–Ω–æ –Ω–æ–≤—ñ —Ä—ñ—à–µ–Ω–Ω—è –í–°"
          
          # –î–æ–¥–∞—î–º–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –¥–æ –∫–æ–º–º—ñ—Ç–∞ —è–∫—â–æ —î
          if [ -f update_stats.txt ]; then
            commit_message="$commit_message

$(cat update_stats.txt)"
          fi
          
          git commit -m "$commit_message"
          
          echo "‚úÖ Changes committed successfully"
      
      # –ü—É—à–∏–º–æ –∑–º—ñ–Ω–∏
      - name: üöÄ Push changes
        if: steps.changes.outputs.changes == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main
      
      # –û—á—ñ–∫—É—î–º–æ –¥–µ–ø–ª–æ—é GitHub Pages
      - name: ‚è≥ Wait for GitHub Pages deployment
        if: steps.changes.outputs.changes == 'true'
        run: |
          echo "‚úÖ Changes pushed to main branch"
          echo "üåê GitHub Pages will automatically deploy the updates"
          echo "üîó Site will be available at: https://${{ github.repository_owner }}.github.io/sudpraktika"
          
          # –ß–µ–∫–∞—î–º–æ —Ç—Ä–æ—Ö–∏ –¥–ª—è –ø–æ—á–∞—Ç–∫—É –¥–µ–ø–ª–æ—é
          sleep 30
      
      # –í–∞–ª—ñ–¥–∞—Ü—ñ—è —Å–∞–π—Ç—É (–æ–ø—Ü—ñ–æ–Ω–∞–ª—å–Ω–æ)
      - name: üîç Validate site structure
        if: steps.changes.outputs.changes == 'true'
        run: |
          echo "Validating Jekyll structure..."
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –æ—Å–Ω–æ–≤–Ω—ñ —Ñ–∞–π–ª–∏
          required_files=("_config.yml" "index.html")
          for file in "${required_files[@]}"; do
            if [ -f "$file" ]; then
              echo "‚úÖ $file exists"
            else
              echo "‚ùå $file missing"
              exit 1
            fi
          done
          
          # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä—ñ–π
          required_dirs=("_articles" "_decisions" "_data")
          for dir in "${required_dirs[@]}"; do
            if [ -d "$dir" ]; then
              echo "‚úÖ $dir directory exists"
            else
              echo "‚ö†Ô∏è $dir directory missing"
            fi
          done
          
          echo "üéâ Site structure validation completed"
      
      # –ü–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è
      - name: üì¢ Summary
        run: |
          echo "=== SudPraktika Update Summary ==="
          echo "üïê Run time: $(date)"
          echo "üîÑ Trigger: ${{ github.event_name }}"
          
          if [ "${{ steps.changes.outputs.changes }}" == "true" ]; then
            echo "‚úÖ Status: New decisions added"
            echo "üåê Site will be updated at: https://${{ github.repository_owner }}.github.io/sudpraktika"
          else
            echo "‚ÑπÔ∏è Status: No updates needed"
          fi
          
          echo "üîç Check logs above for details"

  # –î–æ–¥–∞—Ç–∫–æ–≤–∏–π job –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –ø–æ–º–∏–ª–æ–∫
  notify-on-failure:
    runs-on: ubuntu-latest
    needs: update-decisions
    if: failure()
    
    steps:
      - name: üö® Notify on failure
        run: |
          echo "‚ùå SudPraktika injector failed!"
          echo "üîç Check the logs above for error details"
          echo "üõ†Ô∏è Possible issues:"
          echo "   - Invalid Telegram credentials"
          echo "   - Network connectivity problems"
          echo "   - Rate limiting"
          echo "   - Malformed content"
          
          # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –Ω–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å –≤ Telegram –∞–±–æ email
          # –ù–∞–ø—Ä–∏–∫–ª–∞–¥, —á–µ—Ä–µ–∑ webhook –∞–±–æ —ñ–Ω—à–∏–π —Å–µ—Ä–≤—ñ—Å
